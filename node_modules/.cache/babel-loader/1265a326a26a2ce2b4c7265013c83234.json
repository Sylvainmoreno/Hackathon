{"ast":null,"code":"import _slicedToArray from \"/home/wilder/quetes/hackathon/Hackathon-halloween/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/wilder/quetes/hackathon/Hackathon-halloween/src/Components/Sylvain/Pagefilms.js\";\nimport React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport CardFilms from './CardFilms';\n\nconst PageFilms = props => {\n  const test = 'Marathon';\n\n  const _useState = useState([]),\n        _useState2 = _slicedToArray(_useState, 2),\n        movie = _useState2[0],\n        setMovie = _useState2[1];\n\n  useEffect(() => {\n    getApi();\n  }, []);\n\n  const getApi = () => {\n    axios.get('https://hackathon-wild-hackoween.herokuapp.com/movies').then(response => setMovie(response.data.movies));\n  };\n\n  return React.createElement(React.Fragment, null, movie.map(x => {\n    if (test == 'Marathon') {\n      x.filter(y => {\n        y.title = 'Final_Destination';\n        return React.createElement(CardFilms, {\n          title: x.title,\n          image: x.posterUrl,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 39\n          },\n          __self: this\n        });\n      });\n    }\n  }), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }, \"test\"));\n};\n\nexport default PageFilms; //return (<CardFilms title={x.title} image={x.posterUrl}/> )}})}\n//  {test = 'Marathon' ? x.filter(y => {y.title == 'Final_Destination'} <CardFilms />)\n//<CardFilms title={x.title} image={x.posterUrl} />\n//|| y.title == 'Final_ Destnation_2' || y.title == 'Final_ Destnation_3' || y.title == 'Final_ Destnation_4' || y.title == 'Final_ Destnation_5' || y.title == 'Scream' || y.title == 'Scream_2' || y.title == 'Scream_3' || y.title == 'Scream_4' || y.title == 'Paranormal_Activity' || y.title == 'Paranormal_Activity_2' || y.title == '[REC]' || y.title == '[REC]_2' || y.title == 'Saw' || y.title == 'Saw_2' || y.title == 'Saw_3' || y.title == 'Saw_4' || y.title == 'Saw_5' || y.title == 'Saw_6' || y.title == 'Saw_3D' || y.title == 'The_Hill_Have_Eyes' || y.title == 'The_Hill_Have_Eyes_2' || y.title == 'Insidious' || y.title == 'Insidious:_Chapter_2'","map":{"version":3,"sources":["/home/wilder/quetes/hackathon/Hackathon-halloween/src/Components/Sylvain/Pagefilms.js"],"names":["React","useEffect","useState","axios","CardFilms","PageFilms","props","test","movie","setMovie","getApi","get","then","response","data","movies","map","x","filter","y","title","posterUrl"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,aAAtB;;AAIA,MAAMC,SAAS,GAAIC,KAAD,IAAW;AAEzB,QAAMC,IAAI,GAAG,UAAb;;AAFyB,oBAGCL,QAAQ,CAAC,EAAD,CAHT;AAAA;AAAA,QAGlBM,KAHkB;AAAA,QAGXC,QAHW;;AAKzBR,EAAAA,SAAS,CAAC,MAAM;AACZS,IAAAA,MAAM;AACT,GAFQ,EAEN,EAFM,CAAT;;AAKA,QAAMA,MAAM,GAAG,MAAM;AACjBP,IAAAA,KAAK,CAACQ,GAAN,CAAU,uDAAV,EACKC,IADL,CACUC,QAAQ,IAAIJ,QAAQ,CAACI,QAAQ,CAACC,IAAT,CAAcC,MAAf,CAD9B;AAEC,GAHL;;AAKI,SACA,0CAWKP,KAAK,CAACQ,GAAN,CAAUC,CAAC,IAAE;AACV,QAAIV,IAAI,IAAI,UAAZ,EAAuB;AACnBU,MAAAA,CAAC,CAACC,MAAF,CAASC,CAAC,IAAI;AACVA,QAAAA,CAAC,CAACC,KAAF,GAAU,mBAAV;AAEA,eAAO,oBAAC,SAAD;AAAW,UAAA,KAAK,EAAEH,CAAC,CAACG,KAApB;AAA2B,UAAA,KAAK,EAAEH,CAAC,CAACI,SAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AACH,OAJD;AAKH;AACJ,GARA,CAXL,EAsBI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAtBJ,CADA;AA0BP,CAzCD;;AA2CA,eAAehB,SAAf,C,CAEA;AAEA;AAGA;AAEA","sourcesContent":["import React, { useEffect, useState } from 'react'\nimport axios from 'axios'\nimport CardFilms from './CardFilms'\n\n\n\nconst PageFilms = (props) => {\n\n    const test = 'Marathon'\n    const [movie, setMovie] = useState([])\n\n    useEffect(() => {\n        getApi()\n    }, [])\n\n\n    const getApi = () => {\n        axios.get('https://hackathon-wild-hackoween.herokuapp.com/movies')\n            .then(response => setMovie(response.data.movies))\n        }\n\n        return (\n        <>\n           {/* {movie.map(x => {\n                {test = 'Marathon' ? \n                x.filter(y => {\n                    y.title = 'Final_Destination' \n                \n                    return <CardFilms title={x.title} image={x.posterUrl}/>\n                })\n                \n                : ''\n            }})}*/}\n            {movie.map(x=>{\n                if (test == 'Marathon'){\n                    x.filter(y => {\n                        y.title = 'Final_Destination' \n                    \n                        return <CardFilms title={x.title} image={x.posterUrl}/>\n                    })\n                }\n            })}\n\n         \n            <p>test</p>\n        </>\n    )\n}\n\nexport default PageFilms\n\n//return (<CardFilms title={x.title} image={x.posterUrl}/> )}})}\n\n//  {test = 'Marathon' ? x.filter(y => {y.title == 'Final_Destination'} <CardFilms />)\n\n\n//<CardFilms title={x.title} image={x.posterUrl} />\n\n//|| y.title == 'Final_ Destnation_2' || y.title == 'Final_ Destnation_3' || y.title == 'Final_ Destnation_4' || y.title == 'Final_ Destnation_5' || y.title == 'Scream' || y.title == 'Scream_2' || y.title == 'Scream_3' || y.title == 'Scream_4' || y.title == 'Paranormal_Activity' || y.title == 'Paranormal_Activity_2' || y.title == '[REC]' || y.title == '[REC]_2' || y.title == 'Saw' || y.title == 'Saw_2' || y.title == 'Saw_3' || y.title == 'Saw_4' || y.title == 'Saw_5' || y.title == 'Saw_6' || y.title == 'Saw_3D' || y.title == 'The_Hill_Have_Eyes' || y.title == 'The_Hill_Have_Eyes_2' || y.title == 'Insidious' || y.title == 'Insidious:_Chapter_2'"]},"metadata":{},"sourceType":"module"}